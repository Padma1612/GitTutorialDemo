Gitis a version control system
-easily recover files
-who introduced an issue and when?
-Roll back to previously working state


git init
git status
git add --a
git add filename
git commit -m "message"
git log
rm -rf .git
git clone "<link>"
git clone "<link>" newname
touch "<error.log>"
touch .gitignore
git diff
git diff --stage
git commit -a -m "<msg>"
git rm filename
git mv filename rename_filename
git rm --cached filename---it will untrack the file 
git log -p
git log -p -3
git log --stat
git log --pretty=oneline
git log --pretty=short
git log --pretty=full
git log --since=2.days/weeks/months/years
git restore --staged filename
git checkout -- filename
git chechout -f
git remote add origin https://github.com/Padma1612/GitTutorialDemo.git
git remote
git remote -v

creating SSh
s1--> ssh-keygen -t rsa -b 4096 -C "1my18mca14@gmail.com"
s2---> eval "$(ssh-agent -s)"
s3--> ssh-add ~/.ssh/id_ed25519
s4---> tail ~/.ssh/id_ed25519.pub
git push -u origin main


11) to check the status of git repository 

$ git status

12) to make your directory a git repository

$ git init

13) to make all of the files and folders in git repository ready for next commit (Or we can say putting them in staging area)

$ git add --a

14)To commit (Or we can say taking snapshot of your staged files)

$ git commit -m "<message>"

15)To see recent commits on git repository

$ git log

16)To stage particular files in your git for next commit

$ git add <file name>


